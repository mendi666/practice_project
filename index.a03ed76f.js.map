{"mappings":"AAAeA,eAAAC,EACbC,EAAM,kCAEN,IAAIC,QAAgBC,MAAMF,GAC1B,aAAaC,EAAQE,M,CCCvB,MAAMC,EAAaC,SAASC,cAAc,mBAAoB,EAC1DF,EACJA,EAAWG,UCLI,SAAwBC,EAAU,IAC/C,IAAIC,EAAY,EACZC,EAAa,EAEjBX,IAAaY,MAAMC,IACjB,IAAIC,EAAS,0BAMb,GAJDD,EAASE,QACVJ,EAAaE,EAASE,MACtBD,GAAU,qDAAqDH,aAE1DE,EAASG,QAAQ,CAClBN,EAAwC,IAA5BG,EAASG,QAAQC,OAAeN,EAAWE,EAASG,QAAQC,OAAS,EACjFH,GAAU,mDAAmDJ,YAEzCG,EAASG,QACjBE,SAASC,IACpBL,GAAU,+DACiBK,EAAOC,sBAEjCN,GAAU,SAYlB,SAA4BO,EAAQ,GAAIC,GACtC,MAAMC,EAAUjB,SAASC,cAAcc,KAAU,EAC9CE,IACDA,EAAQf,UAAYc,E,CAdhBE,CAAkB,gBAAiBV,EAAO,G,KDhB3B,GAErBW,MAAM,QAGRC,QAAQC,IAAI","sources":["src/assets/js/getPlanets.js","src/assets/js/index.js","src/assets/js/renderPlanets.js"],"sourcesContent":["export default async function getPlanets(\n  url = \"https://swapi.dev/api/planets/\"\n) {\n  let request = await fetch(url);\n  return await request.json();\n}","\"use strict\";\n\nimport getPlanets from \"./getPlanets\";\nimport renderPlanets from './renderPlanets';\n\nconst planetsRef = document.querySelector(\".planets_info\") || false;\nif (planetsRef) {\nplanetsRef.innerHTML = renderPlanets()\n} else {\n  alert('test')\n}\n\nconsole.log('test')\n\n\n\n","\nimport getPlanets from './getPlanets';\nexport default function renderPlanets (planets = []) {\n  let pageCount = 0;\n  let totalCount = 0;\n  let previousLink, nextLink = \"\";\n  getPlanets().then((response) => {\n    let output = `<div class='container'>`\n\nif(response.count){\n  totalCount = response.count\n  output += `<span class='total_count'>Total Count of Planets: ${totalCount}</span> `\n}\n    if(response.results){\n      pageCount = response.results.length !== 0 ? totalCount/response.results.length : 0\n      output += `<span class='total_count'>Total Count of Pages: ${pageCount}</span> `\n\n      const planetsData = response.results\n      planetsData.forEach((planet) => {\n       output += `<div class='planet__info'>\n<span class='planet__info_name'>${planet.name}</span>\n</div>`\n        output += `</div>`\n        insertIntoWrapper('.planets_info', output)\n\n\n\n      })\n    }\n\n  })\n\n}\n\nfunction insertIntoWrapper (elSel = '', data) {\n  const wrapper = document.querySelector(elSel) || false\n  if(wrapper) {\n    wrapper.innerHTML = data\n  }\n}\n\n\n"],"names":["async","$80848bebc5bcfcec$export$2e2bcd8739ae039","url","request","fetch","json","$ec79588e84da2723$var$planetsRef","document","querySelector","innerHTML","planets","pageCount","totalCount","then","response","output","count","results","length","forEach","planet","name","elSel","data","wrapper","$1abdfe955694cca3$var$insertIntoWrapper","alert","console","log"],"version":3,"file":"index.a03ed76f.js.map"}